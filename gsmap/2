from numpy import *
import ctrack_para
import ctrack_func
import calendar
import gsmap_func
import sys
#------------------------------------------------
iyear = 2001
eyear = 2004
lseason = ["ALL"]
#lseason = [1]
iday    = 1
ny_org  = 120
nx_org  = 360
percent = 99.99 # (%)
nhour   = 1

numrat  = 1.5  # numrat*ntop data will be stored
#------------------------------------------------

idir_root = "/media/disk2/data/GSMaP/sa.one/1hr/ptot"
odir_root = "/media/disk2/data/GSMaP/sa.one/1hr/ptot/ptile"
#***********************************************
lhour = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]
#------ function -------------------------------
def nonzero(a1in):
  return (a1in !=0.0)
#-----------------------------------------------

for season in lseason:
  #-----------------------------------------------
  tottimes  = ctrack_para.ret_totaldays(iyear,eyear,season) * len(lhour)
  if ( 1       <=100-percent    <10):
    ntop  = ceil(tottimes* 0.1)
  elif (0.1    <=100-percent    <1):
    ntop  = ceil(tottimes* 0.01)
  elif (0.01   <=100-percent    <0.1):
    ntop  = ceil(tottimes*0.001)
  elif (0.001  <=100-percent    <0.01):
    ntop  = ceil(tottimes*0.0001)
  elif (0.0001 <=100-percent    <0.001):
    ntop  = ceil(tottimes*0.00001)
  else:
    print "the percent value is out of range",percent
    print "it shoudl be >90(%)"
    sys.exit()
  #
  if ntop < 10.0:
    print "'percentile' is too large"
    print "num of data is ",totaltimes
  #------------------------------------
  #totaldays = ctrack_para.ret_totaldays(iyear, eyear, season)
  wy  = int( 2.0e+8 / ( 4.0*nx_org*ntop*numrat) )
  wy  = min( wy, ny_org)
  wy  = max( wy, 1)
  print "wy=",wy 
  lyfirst = range(0,ny_org,wy)
  lylast  = lyfirst[1:] + [ny_org]
  if lyfirst[-1] == ny_org:
    lyfirst = lyfirst[:-1]
    lylast  = lylast[:-1]

  #---- init --------------------------
  a2ptile   = zeros([ny_org,nx_org],float32)

  #------------------------------------
  for i in range(len(lyfirst)):
    yfirst    = lyfirst[i]
    ylast     = lylast[i]
    itimes  = 0
    a2stck  = 0
    for year in range(iyear, eyear+1):
      #-------------
      lmon  = ctrack_para.ret_lmon(season)
      for mon in lmon:
        idir  = idir_root + "/%04d%02d"%(year,mon)
        print yfirst, year, mon
        #-- leap year ------
        if (calendar.isleap(year) & (mon==2)):
          eday = 28 
        else:
          eday = calendar.monthrange(year, mon)[1]
        #-------------------
        for day in range(iday, eday+1):
          for hour in lhour:
            itimes = itimes + 1
            #-- name ---------------
            #iname  = idir + "/gsmap_mvk.1rh.%04d%02d%02d.%02d00.v5.222.1.sa.one"%(year, mon, day, hour)
            #a2in   = fromfile(iname, float32).reshape(ny_org,nx_org)
            a2in   = gsmap_func.timeave_gsmap_backward_saone(year,mon,day,hour, nhour)
            #-- init ---------------
            a2in_seg   = a2in[yfirst:ylast, :]
            if itimes == 1:
              a2stck   = a2in_seg
            else:
              a2stck   = r_[a2stck, a2in_seg]
            #-----------------------
    #----------------------------------
    a2stck   = a2stck.reshape(-1,ylast-yfirst,nx_org)
      
    for iiy in range( (ylast -yfirst)):
      iy     = yfirst + iiy
      print "iy=", iy
      for iix in range(nx_org):
        ix   = iix
        #
        a1v       = a2stck[:,iiy,iix]
        a1nonzero = filter(nonzero, a1v)
        #------------ 
        if len(a1nonzero) == 0.0:
          a2ptile[iy,ix]  = 0.0
        else:
          a2ptile[iy,ix]  = percentile(a1v, percent)
        #------------ 
  #----------------------------------
  odir  = odir_root + "/%04d-%04d"%(iyear, eyear)
  ctrack_func.mk_dir(odir)
  #
  soname = odir + "/gsmap_mvk.v5.222.1.movw%02dhr.p%05.2f.%s.sa.one"%(nhour, percent, season)
  a2ptile.tofile(soname)
  print soname
  
